map $http_x_forwarded_proto $forwarded_proto {
  default $http_x_forwarded_proto;
  '' $scheme;
}

map $http_x_forwarded_port $forwarded_port {
  default $http_x_forwarded_port;
  '' $server_port;
}

map $http_x_forwarded_host $forwarded_host {
  default $http_x_forwarded_host;
  '' $host;
}

{{if exists "/self/service/metadata/ssl_cert"}}
server {
    listen 8080;
    return 301 https://$host$request_uri;
}
{{else}}
server {
  listen 8080;

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # Very rarely should these ever be accessed outside of your lan
  location ~* \.(txt|log)$ {
    allow 192.168.0.0/16;
    deny all;
  }

  # Allow "Well-Known URIs" as per RFC 5785
  location ~* ^/.well-known/ {
    allow all;
  }

  {{if exists "/self/service/metadata/root"}}
    root {{getv "/self/service/metadata/root"}};
  {{end}}

  {{if exists "/self/service/metadata/client_max_body_size"}}
    client_max_body_size {{getv "/self/service/metadata/client_max_body_size"}};
  {{else}}
    client_max_body_size 0;
  {{end}}

  {{if exists "/self/service/metadata/index"}}
    index  {{getv "/self/service/metadata/index"}};
  {{end}}

  {{if exists "/self/service/metadata/resolver"}}
    resolver {{getv "/self/service/metadata/resolver"}};
  {{end}}

  {{if exists "/self/service/metadata/fcgi_pass"}}

    {{if exists "/self/service/metadata/drupal"}}
      location ~ \..*/.*\.php$ {
        return 403;
      }

      location ~ ^/sites/.*/private/ {
        return 403;
      }

      # Block access to scripts in site files directory
      location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
      }

      # Block access to "hidden" files and directories whose names begin with a
      # period. This includes directories used by version control systems such
      # as Subversion or Git to store control files.
      location ~ (^|/)\. {
        return 403;
      }

      location / {
        try_files $uri /index.php?$query_string; # For Drupal >= 7
      }

      location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
      }

      # Don't allow direct access to PHP files in the vendor directory.
      location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
      }

      # In Drupal 8, we must also match new paths where the '.php' appears in
      # the middle, such as update.php/selection. The rule we use is strict,
      # and only allows this pattern with the update.php front controller.
      # This allows legacy path aliases in the form of
      # blog/index.php/legacy-path to continue to route to Drupal nodes. If
      # you do not have any paths like that, then you might prefer to use a
      # laxer rule, such as:
      #   location ~ \.php(/|$) {
      # The laxer rule will continue to work if Drupal uses this new URL
      # pattern with front controllers other than update.php in a future
      # release.
      location ~ '\.php$|^/update.php' {
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Security note: If you're running a version of PHP older than the
        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        # See http://serverfault.com/q/627903/94922 for details.
        include fastcgi_params;
        fastcgi_index index.php;
        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_intercept_errors on;
        # PHP 5 socket location.
        #fastcgi_pass unix:/var/run/php5-fpm.sock;
        # PHP 7 socket location.
        #fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_pass {{getv "/self/service/metadata/fcgi_pass"}};
      }

      # Fighting with Styles? This little gem is amazing.
      # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
      location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
        try_files $uri @rewrite;
      }

      # Handle private files through Drupal. Private file's path can come
      # with a language prefix.
      location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
        try_files $uri /index.php?$query_string;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
      }
    {{else}}
      location / {
        try_files $uri $uri/ /index.php?q=$uri&$args;
      }

      location ~ \.php {
        include fastcgi_params;
        fastcgi_pass {{getv "/self/service/metadata/fcgi_pass"}};
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
      }
    {{end}}
  {{else}}
    location / {

      {{if exists "/self/service/metadata/pool"}}
        proxy_pass http://{{getv "/self/service/metadata/pool"}};
      {{else}}
        proxy_pass http://$pool;
      {{end}}

      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $forwarded_host;
      proxy_set_header X-Forwarded-Proto $forwarded_proto;
      proxy_set_header X-Forwarded-Port $forwarded_port;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering on;
      # This allows the ability for the execute shell window to remain open for up to 15 minutes.
      # Without this parameter, the default is 1 minute and will automatically close.
      proxy_read_timeout 900s;
      {{if exists "/self/service/metadata/auth/user"}}
        auth_basic "Restricted";
         auth_basic_user_file /usr/local/etc/nginx/conf.d/htpasswd;
      {{else}}
        auth_basic off;
      {{end}}
    }
  {{end}}
}
{{end}}
